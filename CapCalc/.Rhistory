while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 500000
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-dt/( 0.000001 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
tn <- array(1)
# dt, mt, c
t <- 0
vi <- 0
v <- array(0)
tn <- array(1)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 500000
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-dt/( 0.000001 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
t <- dt
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 500000
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-dt/( 0.000001 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
tn = 0
v = 0
dt = 0.000000001
c = 10 ** -12
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 500000
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-dt/( 0.000001 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
plot(tn, v)
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-dt/(0.000001 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
mt = 500 * 0.000001
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-dt/(0.000001 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
v[n + 1] <- (v[401] - vi) * (log(1)) ** (-dt/(0.000001 * c)) + vi
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
v[n + 1] <- (v[1] - vi) * (log(1)) ** (-dt/(0.000001 * c)) + vi
} else {
vi <- 0
v[n + 1] <- (v[401] - vi) * (log(1)) ** (-dt/(0.000001 * c)) + vi
}
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-t/(1000000 * c)) + vi
} else {
vi <- 0
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-(t - 400 * 0.000001)/(1000000 * c)) + vi
}
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
dt = 0.0000001
t <- dt
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-t/(1000000 * c)) + vi
} else {
vi <- 0
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-(t - 400 * 0.000001)/(1000000 * c)) + vi
}
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
dt = 0.0000001
dt = 0.000001
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-t/(1000000 * c)) + vi
} else {
vi <- 0
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-(t - 400 * 0.000001)/(1000000 * c)) + vi
}
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-t/(1000000 * c)) + vi
} else {
vi <- 0
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-(t - 400 * 0.000001)/(1000000 * c)) + vi
}
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
v[n + 1] <- (v[n] - vi) * (log(1)) ** (1 -t/(1000000 * c)) + vi
} else {
vi <- 0
v[n + 1] <- (v[n] - vi) * (log(1)) ** (1 -(t - 400 * 0.000001)/(1000000 * c)) + vi
}
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
v[n + 1] <- (v[n] - vi) * (log(1)) ** (-(t - 400 * 0.000001)/(1000000 * c)) + vi
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
c = 0.0000000001
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 400)) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001 < 0.000400)) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
mt = 1
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
mt = 0.0001
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
mt = 0.01
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
mt = 0.002
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
c = 0.00000000002
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
c = 0.000000000005
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
c = 0.0000000005
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
c = 0.0000000001
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
mt = 0.01
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
write.csv((tn, v), file="nohand.csv"
write.csv(c(tn, v), file="nohand.csv"
write.csv(c(tn, v), file="nohand.csv"
write.csv(c(tn, v), file="nohand.csv")
c = 0.00000000001
c = 0.000000001
# dt, mt, c
t <- dt
vi <- 0
v <- array(0)
tn <- array(0)
n <- 1
while(t < mt) {
if(t %% (500 * 0.000001) < 0.000400) {
vi <- 5
} else {
vi <- 0
}
v[n + 1] <- (v[n] - vi) * exp(-dt/(1000000 * c)) + vi
tn[n + 1] <- t
t <- t + dt
n <- n + 1
}
plot(tn, v)
write.csv((tn, v), file="hand.csv")
write.csv(c(tn, v), file="hand.csv")
